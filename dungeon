while not game:IsLoaded() do
    wait()
end
local libary = loadstring(game:HttpGet("https://pastebin.com/raw/RvJ0qewm", true))()
local main = libary:CreateWindow("GojohUnsealed")

local mod = main:Button("SJW", function()
_G.RollEvent_enabled = not _G.RollEvent_enabled

while _G.RollEvent_enabled do
local args = {
    [1] = "SkillsControl",
    [2] = "YutoSword (Awakened)",
    [3] = "T",
    [4] = "Release",
    [6] = CFrame.new(-2128.1845703125, 39.99645233154297, 1975.1785888671875) * CFrame.Angles(3.141592502593994, -1.1301807165145874, 3.141592502593994)
}
game:GetService("ReplicatedStorage").Game.Remotes.ServerHandler:FireServer(unpack(args))
wait(1)
local args = {
    [1] = "SkillsControl",
    [2] = "Hakaro",
    [3] = "T",
    [4] = "Release",
    [6] = CFrame.new(-2128.1845703125, 39.99645233154297, 1975.1785888671875) * CFrame.Angles(3.141592502593994, -1.1301807165145874, 3.141592502593994)
}
game:GetService("ReplicatedStorage").Game.Remotes.ServerHandler:FireServer(unpack(args))
wait(1)
end
end)

local mod = main:Button("VY", function()
local args = {
    [1] = "SkillsControl",
    [2] = "YutoSword (Awakened)",
    [3] = "V",
    [4] = "Release",
    [6] = CFrame.new(-2128.1845703125, 39.99645233154297, 1975.1785888671875) * CFrame.Angles(3.141592502593994, -1.1301807165145874, 3.141592502593994)
}
game:GetService("ReplicatedStorage").Game.Remotes.ServerHandler:FireServer(unpack(args))
end)

local mod = main:Button("VH", function()
local args = {
    [1] = "SkillsControl",
    [2] = "Hakaro",
    [3] = "V",
    [4] = "Release",
    [6] = CFrame.new(-2128.1845703125, 39.99645233154297, 1975.1785888671875) * CFrame.Angles(3.141592502593994, -1.1301807165145874, 3.141592502593994)
}
game:GetService("ReplicatedStorage").Game.Remotes.ServerHandler:FireServer(unpack(args))
end)

local mod = main:Button("RENDER TRUE", function()
game:GetService('RunService'):Set3dRenderingEnabled(true) -- включён
end)

local mod = main:Button("RENDER FALSE", function()
game:GetService('RunService'):Set3dRenderingEnabled(false) -- выключен
end)
